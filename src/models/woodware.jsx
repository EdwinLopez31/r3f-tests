/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Blizzy (https://sketchfab.com/jeffbas)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/kitchen-woodenware-objects-3288f4ba1f254071a0266ca9f51ca0c9
Title: Kitchen woodenware objects
*/

import React, { useRef, useState } from "react";
import { Bounds, Html, useGLTF } from "@react-three/drei";
import { SelectToZoomWrapper } from "../utils/SelectToZoomWrapper";
export function Woodware(props) {
  const { nodes, materials } = useGLTF("/3d/kitchen_woodenware_objects.glb");
  const [focusedNode, setFocusedNode] = useState(null);
  const pitcherRef = useRef(null);
  const mortarPestleRef = useRef(null);
  const potRef = useRef(null);
  const choppingBoardRef = useRef(null);
  const bowlRef = useRef(null);

  const updateFocusedNode = (e) => {
    if (e.object) {
      setFocusedNode(e.object.uuid);
    }
  };

  return (
    <group {...props} dispose={null}>
      <group position={[0, 0, 0.495]} scale={0.007}>
        <Bounds fit clip observe margin={2}>
          <SelectToZoomWrapper>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh1_lambert10_0.geometry}
              material={materials.lambert10}
              position={[-3.556, 0, -37.78]}
              scale={100}
              onClick={updateFocusedNode}
              ref={bowlRef}
            >
              {focusedNode === bowlRef?.current?.uuid && (
                <Html
                  scale={3}
                  rotation={[0, 0, 0]}
                  position={[15, -5, -20]}
                  transform
                >
                  <div className='annotation'>
                    Bowl 4$ <span style={{ fontSize: "1.5em" }}>🚽</span>
                  </div>
                </Html>
              )}
            </mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh6_lambert10_0.geometry}
              material={materials.lambert10}
              position={[13.13, 0, -84.973]}
              scale={100}
              onClick={updateFocusedNode}
              ref={pitcherRef}
            >
              {focusedNode === pitcherRef?.current?.uuid && (
                <Html
                  scale={3}
                  rotation={[Math.PI / 10, 0, 0]}
                  position={[0, 0, -20]}
                  transform
                >
                  <div className='annotation'>
                    Pitcher 6$ <span style={{ fontSize: "1.5em" }}>😎</span>
                  </div>
                </Html>
              )}
            </mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.Mesh3_lambert10_0.geometry}
              material={materials.lambert10}
              position={[-12.823, 0, -290.811]}
              rotation={[0, -Math.PI / 2, 0]}
              scale={100}
              onClick={updateFocusedNode}
              ref={potRef}
            >
              {focusedNode === potRef?.current?.uuid && (
                <Html
                  scale={20}
                  rotation={[Math.PI / 10, 20.5, 0]}
                  position={[-100, 20, -30]}
                  transform
                >
                  <div className='annotation'>
                    Pot 20$ <span style={{ fontSize: "1.5em" }}>🪴</span>
                  </div>
                </Html>
              )}
            </mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.polySurface3_lambert10_0.geometry}
              material={materials.lambert10}
              position={[0, 0, -28.138]}
              onClick={updateFocusedNode}
              ref={mortarPestleRef}
            >
              {focusedNode === mortarPestleRef?.current?.uuid && (
                <Html
                  scale={20}
                  rotation={[Math.PI / 10, 0, 0]}
                  position={[-20, 10, 0]}
                  transform
                >
                  <div className='annotation'>
                    Mortar and Pestle 20$
                    <span style={{ fontSize: "1.5em" }}>😵‍💫</span>
                  </div>
                </Html>
              )}
            </mesh>
            <mesh
              castShadow
              receiveShadow
              geometry={nodes.pPlane1_lambert10_0.geometry}
              material={materials.lambert10}
              position={[-101.848, 0, -18.047]}
              scale={[2.041, 1.483, 2.041]}
              onClick={updateFocusedNode}
              ref={choppingBoardRef}
            >
              {focusedNode === choppingBoardRef?.current?.uuid && (
                <Html
                  scale={20}
                  rotation={[Math.PI / 10, 0, 0]}
                  position={[-20, 10, 0]}
                  transform
                >
                  <div className='annotation'>
                    Chopping Board 2$
                    <span style={{ fontSize: "1.5em" }}>🪓</span>
                  </div>
                </Html>
              )}
            </mesh>
          </SelectToZoomWrapper>
        </Bounds>
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.pPlane2_lambert11_0.geometry}
        material={materials.lambert11}
        scale={0.06}
      />
    </group>
  );
}

useGLTF.preload("/3d/kitchen_woodenware_objects.glb");
